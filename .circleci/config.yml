version: 2.1

executors:
  docker-publisher:
    docker:
      - image:  google/cloud-sdk
        auth:
          username: $DOCKER_ID
          password: $DOCKER_PASSWORD  # context / project UI env-var reference
    environment:
      CLOUDSDK_CORE_DISABLE_PROMTS: 1

jobs:
  google-cloud-setup:
    executor: docker-publisher
    steps:
      - run:
          name: "Authorize Google Cloud SDK"
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud container clusters get-credentials ${MULTI_CLUSTER}

  before-install:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "Build react-test image"
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
            docker build -t siyandav0/react-test -f ./client/Dockerfile.dev ./client
      - run:
          name: "Archive Docker Image"
          command: docker save -o image.tar siyandav0/react-test
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  script:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: "Load archived Docker image"
          command: |
            docker load -i /tmp/workspace/image.tar 
      - run:
          name: "run tests on react-test image"
          command: |
            docker run -e CI=true siyandav0/react-test npm test

  deploy:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: "Run Bash Script" 
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
            bash ./deploy.sh

workflows:
  version: 2
  setup-build-test-deploy:
    jobs:
      - google-cloud-setup:
          filters:
            branches:
              only: master
      - before-install:
          filters:
            branches:
              only: master
          requires:
            - google-cloud-setup
      - script:
          filters:
            branches:
              only: master
          requires: 
            - before-install
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - script
           